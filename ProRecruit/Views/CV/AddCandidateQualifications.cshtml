@model ProRecruit.CandidateQualification
@{
    ViewBag.Title = "AddCandidateQualifications";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}
<aside id="left-panel" class="left-panel">
    <nav class="navbar navbar-expand-sm navbar-default">

        <div class="navbar-header">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#main-menu" aria-controls="main-menu" aria-expanded="false" aria-label="Toggle navigation">
                <i class="fa fa-bars"></i>
            </button>
            <a class="navbar-brand">Name</a>
        </div>

        <div id="main-menu" class="main-menu collapse navbar-collapse">
            <ul class="nav navbar-nav">
                <li>
                    <a style="margin-left:50px;" @Html.ActionLink("Customize CV", "AddCandidateQualifications", "CV")></a>
                </li>
                <li>
                    <a style="margin-left:50px;" @Html.ActionLink("View Profile", "Details", "Candidates")></a>
                </li>
                <li>
                    <a style="margin-left:50px;" @Html.ActionLink("View All Jobs", "ViewAllJobs", "Jobs")></a>
                </li>
                <h3 class="menu-title">Customize Profile</h3>
                <li>
                    <a style="margin-left:50px;" @Html.ActionLink("Applied Jobs", "ViewJobsAppliedFor", "Jobs")></a>
                </li>
                <li>
                    <a style="margin-left:50px;" @Html.ActionLink("Saved Jobs", "ViewSavedJobs", "Jobs")></a>
                </li>
            </ul>
        </div>
    </nav>
</aside>

<div id="right-panel" class="right-panel">

    <!-- Header-->
    <header id="header" class="header" style="background-color: #5DBCD2">

        <div class="header-menu">

            <div class="col-sm-7">
                <a id="menuToggle" class="menutoggle pull-left"><i class="fa fa fa-tasks"></i></a>
            </div>
            <div class="col-sm-5">
                <div class="user-area dropdown float-right">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <img class="user-avatar rounded-circle" src="@Url.Content("~/Content/Dashboard/")images/admin.jpg" alt="User Avatar">
                    </a>

                    <div class="user-menu dropdown-menu">
                        <a class="nav-link" href=""><i class="fa fa-power -off"></i>Logout</a>
                    </div>
                </div>

                <div class="language-select dropdown" id="language-select">
                    <a class="dropdown-toggle" href="#" data-toggle="dropdown" id="language" aria-haspopup="true" aria-expanded="true">
                        <i class="flag-icon flag-icon-us"></i>
                    </a>
                </div>

            </div>
        </div>

    </header>
    <div class="breadcrumbs">
        <div class="col-sm-4">
            <div class="page-header float-left">
                <div class="page-title">
                    <h1>Dashboard</h1>
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div class="page-header float-right">
                <div class="page-title">
                    <ol class="breadcrumb text-right">
                        <li>@Html.ActionLink("Dashboard", "Dashboard", "Candidates")</li>
                        <li class="active">Customize CV</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="content mt-3">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <strong>Add Qualification</strong>
                        </div>
                        <div class="card-body card-block">
                            @using (Html.BeginForm("AddCandidateQualifications", "CV"))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.DegreeLevel, "Qualification", htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.DropDownList("DegreeLevelId", null, htmlAttributes: new { name = "DegreeLevelId", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.DegreeLevel, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divDegreeType" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.DegreeType, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="DegreeType" class="form-control"></select>
                                            @Html.ValidationMessageFor(model => model.DegreeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.Degreetitle, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.EditorFor(model => model.Degreetitle, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Degreetitle, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.MajorSubjects, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.EditorFor(model => model.MajorSubjects, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MajorSubjects, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="Country" class="form-control"></select>
                                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3"><label for="select" class=" form-control-label">State</label></div>
                                        <div class="col-12 col-md-9">
                                            <select id="State" class="form-control"></select>
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="City" class="form-control"></select>
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.Institution, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.EditorFor(model => model.Institution, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Institution, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group col-lg-6">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.DateCompleted, htmlAttributes: new { @class = "form-control-label", @type = "date" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.EditorFor(model => model.DateCompleted, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DateCompleted, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divResultType" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.ResultType, htmlAttributes: new { @class = "form-control-labe" })</div>
                                        <div class="col-12 col-md-9">
                                            @Html.DropDownListFor(model => model.ResultType, new List<SelectListItem>
                                                                                                                                                    {
                                                                                                                                                        new SelectListItem{ Text = "Select One" },
                                                                                                                                                        new SelectListItem{ Text = "Grade", Value = "Grade" },
                                                                                                                                                        new SelectListItem{ Text = "GPA", Value = "GPA" },
                                                                                                                                                        new SelectListItem{ Text = "Percentage", Value = "Percentage" }
                                                                                                                                                    }, "", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ResultType)
                                        </div>
                                    </div>

                                    <div id="divTotalGpa" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.TotalGPA, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="ddlTotalGPA" class="form-control">
                                                <option value="">Select One</option>
                                                <option value="4" dir="ltr">4</option>
                                                <option value="5" dir="ltr">5</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.TotalGPA, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divYourGpa" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.YourGPA, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="ddlYourGPA" class="form-control"></select>
                                            @Html.ValidationMessageFor(model => model.YourGPA, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divTotalGrade" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.TotalGrade, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="ddlTotalGrade" class="form-control">
                                                <option value="">Select One</option>
                                                <option value="A+" dir="ltr">A+</option>
                                                <option value="A" dir="ltr">A</option>
                                                <option value="B+" dir="ltr">B+</option>
                                                <option value="B" dir="ltr">B</option>
                                                <option value="C+" dir="ltr">C+</option>
                                                <option value="C" dir="ltr">C</option>
                                                <option value="D+" dir="ltr">D+</option>
                                                <option value="D" dir="ltr">D</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.TotalGrade, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divTotalPercentage" class="row form-group col-lg-6 hidden">
                                        <div class="col col-md-3">@Html.LabelFor(model => model.TotalPercentage, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="ddlTotalPercentage" class="form-control"></select>
                                            @Html.ValidationMessageFor(model => model.TotalPercentage, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div id="divResultStatus" class="row form-group col-lg-6 hidden">

                                        <div class="col col-md-3">@Html.LabelFor(model => model.ResultStatus, htmlAttributes: new { @class = "form-control-label" })</div>
                                        <div class="col-12 col-md-9">
                                            <select id="ddlResultStatus" class="form-control">
                                                <option value="">Select One</option>
                                                <option value="Completed" dir="ltr">Completed</option>
                                                <option value="Incomplete" dir="ltr">Incomplete</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.ResultStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    @Html.HiddenFor(model => model.City, new { id = "hiddenCity" })
                                    @Html.HiddenFor(model => model.Country, new { id = "hiddenCountry" })
                                    @Html.HiddenFor(model => model.DegreeType, new { id = "hiddenDegreeType" })
                                    @Html.HiddenFor(model => model.DegreeLevel, new { id = "hiddenDegreeLevel" })
                                    @Html.HiddenFor(model => model.TotalGrade, new { id = "hiddenTotalGrade" })
                                    @Html.HiddenFor(model => model.TotalGPA, new { id = "hiddenTotalGPA" })
                                    @Html.HiddenFor(model => model.YourGPA, new { id = "hiddenYourGPA" })
                                    @Html.HiddenFor(model => model.TotalPercentage, new { id = "hiddenTotalPercentage" })
                                    @Html.HiddenFor(model => model.ResultStatus, new { id = "hiddenResultStatus" })

                                </div>
                            }
                        </div>
                        <div class="card-footer">
                            <input type="submit" id="Create" value="Create" class="btn btn-primary btn-sm" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="multipleView"></div>
    <div class="container" style="text-align:right;">
        @Html.ActionLink("Next Step", "AddCandidateSkills", "CV", null, new { @class = "btn btn-primary " })
        <br />
    </div>
    </div>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script>
    $(document).ready(function () {
        $.ajax({
            url: "@Url.Action("QualificationMulitpleView", "CV")", success: function (result) {
                $("#multipleView").html(result);
            }
        });
        GetCountries();
        GetStates();
        GetCities();
    })

    $("#ResultType").change(function () {
        $("#divTotalGrade").addClass('hidden');
        $("#divTotalGpa").addClass('hidden');
        $("#divTotalPercentage").addClass('hidden');
        $("#divYourGpa").addClass('hidden');

        var val = $("#ResultType").val();

        if(val == 'Grade'){
            $("#divTotalGrade").removeClass('hidden');
        }
        if (val == 'GPA') {
            $("#divTotalGpa").removeClass('hidden');
        }
        if (val == 'Percentage') {
            $("#divTotalPercentage").removeClass('hidden');
            $.ajax({
                type: "POST",
                url: "/CV/RetrunValuesOfPercentage/",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#ddlTotalPercentage").empty().append('<option selected="selected" value="0">Please select</option>');
                    $.each(response, function () {
                        $("#ddlTotalPercentage").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        }
    });

    $("#ddlTotalGPA").change(function () {
        $("#divYourGpa4").addClass('hidden');
        $("#divYourGpa5").addClass('hidden');
        $("#ddlYourGPA").empty();

        var val = $("#ddlTotalGPA").val();

        if (val == '4') {
            $("#divYourGpa").removeClass('hidden');
            $.ajax({
                type: "POST",
                url: "/CV/ReturnValuesOfGPA4/",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#ddlYourGPA").empty().append('<option selected="selected" value="0">Please select</option>');
                    $.each(response, function () {
                        $("#ddlYourGPA").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }

            })
        }
        if (val == '5') {
            $("#divYourGpa").removeClass('hidden');
            $.ajax({
                type: "POST",
                url: "/CV/ReturnValuesOfGPA5/",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#ddlYourGPA").empty().append('<option selected="selected" value="0">Please select</option>');
                    $.each(response, function () {
                        $("#ddlYourGPA").append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }

            })
        }
    });

    $("#Create").click(function () {
        var valCity = $("#City :selected").text();
        var valCountry = $("#Country :selected").text();
        var valDegreeType = $("#DegreeType").val();
        var valDegreeLevel = $("#DegreeLevelId").val();
        var valTotalGrade = $("#ddlTotalGrade").val();
        var valTotalGPA = $("#ddlTotalGPA").val();
        var valYourGPA = $("#ddlYourGPA").val();
        var valTotalPercentage = $("#ddlTotalPercentage").val();
        var valResultStatus = $("#ddlResultStatus").val();

        $("#hiddenCity").val(valCity);
        $("#hiddenCountry").val(valCountry);
        $("#hiddenDegreeType").val(valDegreeType);
        $("#hiddenDegreeLevel").val(valDegreeLevel);
        $("#hiddenTotalGrade").val(valTotalGrade);
        $("#hiddenTotalGPA").val(valTotalGPA);
        $("#hiddenYourGPA").val(valYourGPA);
        $("#hiddenTotalPercentage").val(valTotalPercentage);
        $("#hiddenResultStatus").val(valResultStatus);
    });

    function CheckForResultStaus() {
        var valQualificationLevel = $("#DegreeLevelId :selected").text();
        if (valQualificationLevel == 'Non-Matriculation') {
            $("#divResultStatus").removeClass('hidden');
        }
        if (valQualificationLevel == 'Certification') {
            $("#divResultStatus").removeClass('hidden');
        }
        if (valQualificationLevel == 'Diploma') {
            $("#divResultStatus").removeClass('hidden');
        }
        if (valQualificationLevel == 'Short Course') {
            $("#divResultStatus").removeClass('hidden');
        }
    }

    function CheckForResultType() {
        var valQualificationLevel = $("#DegreeLevelId :selected").text();
        if (valQualificationLevel == 'Matriculation/O-Level') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
        if (valQualificationLevel == 'Intermediate/A-Level') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
        if (valQualificationLevel == 'Bachelors') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
        if (valQualificationLevel == 'Masters') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
        if (valQualificationLevel == 'MPhil/MS') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
        if (valQualificationLevel == 'PHD/Doctorate') {
            $("#divDegreeType").removeClass('hidden');
            $("#divResultType").removeClass('hidden');
        }
    }

    $("#DegreeLevelId").change(function () {
        $("#divDegreeType").addClass('hidden');
        $("#divResultType").addClass('hidden');
        $("#divResultStatus").addClass('hidden');
        $("#divTotalGpa").addClass('hidden');
        $("#divYourGPA").addClass('hidden');
        $("#divTotalPercentage").addClass('hidden');
        $("#divTotalGrade").addClass('hidden');
        CheckForResultStaus();
        CheckForResultType();
        //var qualificationId = $("#QualificationId :selected").text();
        var qualificationId = $("#DegreeLevelId").val();
        var ddlQualificationTypes = $("#DegreeType");
        ddlQualificationTypes.empty();
        $.ajax({
            type: "POST",
            url: "/CV/GetTypesByQualification/" + qualificationId,
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                ddlQualificationTypes.empty().append('<option selected="selected" value="0">Please select</option>');
                $.each(response, function () {
                    ddlQualificationTypes.append($("<option></option>").val(this['Value']).html(this['Text']));
                });
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });

    function GetCountries() {
        $.ajax({
            type: "GET",
            url: "http://api.geonames.org/countryInfoJSON?formatted=true&lang=en&style=full&username=hamzaws9",
            contentType: "application/json; charset=utf-8",
            dataType: "jsonp",
            success: function (data) {
                $("#Country").empty();
                $("#Country").append($('<option />', { value: -1, text: 'Select Country' }));
                $(data.geonames).each(function (index, item) {
                    $("#Country").append($('<option />', { value: item.geonameId, text: item.countryName }));
                });
            },
            error: function (data) {
                alert("Failed to get countries.");
            }
        });
    }

    function GetStates() {
        $("#Country").change(function () {
            GetChildren($(this).val(), "State", $("#State"));
        });
    }

    function GetCities() {
        $("#State").change(function () {
            GetChildren($(this).val(), "City", $("#City"));
        });
    };

    function GetChildren(geoNameId, childType, ddlSelector) {
        $.ajax({
            type: "GET",
            url: "http://api.geonames.org/childrenJSON?geonameId=" + geoNameId + "&username=hamzaws9",
            contentType: "application/json; charset=utf-8",
            dataType: "jsonp",
            success: function (data) {
                $(ddlSelector).empty();
                $(ddlSelector).append($('<option />', { value: -1, text: 'Select ' + childType }));
                $(data.geonames).each(function (index, item) {
                    $(ddlSelector).append($('<option />', { value: item.geonameId, text: item.name }));
                });
            },
            error: function (data) {
                alert("failed to get data");
            }
        });
    }
    </script>
