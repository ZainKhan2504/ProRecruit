@model ProRecruit.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LoginPage.cshtml";
}
<div class="limiter">
    <div class="container-login100" style="background-image: url('@Url.Content("~/Content/LoginPage/")images/bg.jpg');">
        <div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "login100-form validate-form flex-sb flex-w", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <span class="login100-form-title p-b-53">
                    Register
                </span>
                <!-- username -->
                <div class="p-t-31 p-b-9">
                    <span class="txt1">
                        Username
                    </span>
                    <p>@Html.ValidationMessageFor(m => m.Email, "", new { @class = "txt2" })</p>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Username is required">
                    @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                    <span class="focus-input100"></span>
                </div>
                <!-- password -->
                <div class="p-t-13 p-b-9">
                    <span class="txt1">
                        Password
                    </span>
                    <p>@Html.ValidationMessageFor(m => m.Password, "", new { @class = "txt2" })</p>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Password is required">
                    @Html.PasswordFor(m => m.Password, new { @class = "input100" })
                    <span class="focus-input100"></span>
                </div>
                <!-- confirm password -->
                <div class="p-t-13 p-b-9">
                    <span class="txt1">
                        Confirm Password
                    </span>
                    <p>@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "txt2" })</p>
                </div>
                <div class="wrap-input100 validate-input" data-validate="Password is required">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100" })
                    <span class="focus-input100"></span>
                </div>
                <!-- register as -->
                <div class="p-t-13 p-b-9">
                    <span class="txt1">
                        Register As
                    </span>
                </div>
                <div class="wrap-radio validate-input" data-validate="Selection is required">
                    <label class="txt1">@Html.RadioButton("Type", "Candidate", new { @class = "" }) Job Seeker</label>
                    <label class="txt1">@Html.RadioButton("Type", "Organization", new { @class = "" }) Recruiter</label>
                </div>
                <div class="container-login100-form-btn m-t-17">
                    <button class="login100-form-btn" value="Register" type="submit">
                        Register
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

