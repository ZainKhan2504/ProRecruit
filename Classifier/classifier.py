# -*- coding: utf-8 -*-
"""classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14xq7G1x1TPZH6I7B3U21BZY5y4gjh6Lf
"""

import pandas as pd
from sklearn import preprocessing, tree

data_train = pd.read_csv('data.csv')
#data_test = pd.read_csv('../input/test.csv')

#data_train

def encode_features(df_train):
    features = ['c_lastedu', 'c_Farea', 'J_Edu', 'J_FA', 'yes/no']
    df_combined = df_train[features]
    
    for feature in features:
        le = preprocessing.LabelEncoder()
        le = le.fit(df_combined[feature])
        df_train[feature] = le.transform(df_train[feature])
    return df_train
    
data_train = encode_features(data_train)
#data_train

X_all = data_train.drop(['yes/no'], axis=1)
#X_all

y_all = data_train['yes/no']
#y_all

classification = tree.DecisionTreeClassifier()
classification = classification.fit(X_all,y_all)

#classification

#to_predict = [[28,6,0,6,3,3,22,4,0,5,0]]
to_predict = [[20,1,0,8,3,1,22,4,0,5,0]]

predict = classification.predict(to_predict)
print(predict)